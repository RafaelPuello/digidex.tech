# Generated by Django 5.1 on 2024-09-19 17:34

import django.db.models.deletion
import modelcluster.fields
import uuid
import wagtail.fields
import wagtail.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('wagtailcore', '0094_alter_page_locale'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('live', models.BooleanField(default=True, editable=False, verbose_name='live')),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes')),
                ('first_published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at')),
                ('last_published_at', models.DateTimeField(editable=False, null=True, verbose_name='last published at')),
                ('go_live_at', models.DateTimeField(blank=True, null=True, verbose_name='go live date/time')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time')),
                ('expired', models.BooleanField(default=False, editable=False, verbose_name='expired')),
                ('locked', models.BooleanField(default=False, editable=False, verbose_name='locked')),
                ('locked_at', models.DateTimeField(editable=False, null=True, verbose_name='locked at')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(db_index=True, max_length=25)),
                ('description', wagtail.fields.RichTextField(blank=True, max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.collection')),
                ('latest_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision')),
                ('live_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale', verbose_name='locale')),
                ('locked_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='locked by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'box',
                'verbose_name_plural': 'boxes',
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(wagtail.models.PreviewableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BoxItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('box', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.box')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(('app_label', 'biology'), ('model', 'Plant')), null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'box item',
                'verbose_name_plural': 'box items',
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='box',
            index=models.Index(fields=['owner', 'name'], name='inventory_b_owner_i_360465_idx'),
        ),
        migrations.AddConstraint(
            model_name='box',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_owner_inventory'),
        ),
        migrations.AlterUniqueTogether(
            name='box',
            unique_together={('translation_key', 'locale')},
        ),
        migrations.AddIndex(
            model_name='boxitem',
            index=models.Index(fields=['content_type', 'object_id'], name='inventory_b_content_6aa1d5_idx'),
        ),
        migrations.AddConstraint(
            model_name='boxitem',
            constraint=models.UniqueConstraint(fields=('box', 'content_type', 'object_id'), name='unique_box_item'),
        ),
    ]
